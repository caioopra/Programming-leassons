- Importação:
    import pygame
    from pygame.locals import *     # funções e variáveis

- Inicialização:
    pygame.init()

- Game Loop:
    while True:
        ...
        pygame.display.update()
    -> as mudanças não são efetividas enquanto não rodar um .update()

- Quitting Game Loop:
    while True:
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.exit()
                sys.exit()

- Event Object:
    -> evento ocorre quando usuário faz ações (mouse, teclado, ...)
    -> ver eventos que ocorreram:
        pygame.event.get()   => retorna lista de objetos pygame.event.Event
    -> objetos Event possuem atributos
        -> type: tipo do event que o obj representa (como QUIT)

- Display Screen:
    -> cria-se janela de tamanho fixo usando uma tupla com largura/altura
        DISPLAY = pygame.display.set_mode((300, 300))
    -> acessar coordenadas: (X, Y); ex:
        pygame.draw.circle(DISPLAY, BLACK, (200, 50), 30)   => cria circulo em (200, 50)
        -> valores iniciam no canto superior esquerdo (0, 0) e aumentam para direita embaixo (MAX_X, MAX_Y)

- Colors:
    -> usa RGB
    -> precisa criar objeto Color com valores RGB para os usar (formato de tupla)
        cor1 = pygame.Color(0, 0, 0)         => preto
        cor2 = pygame.Color(255, 255, 255)   => branco
        cor3 = pygame.Color(255, 0, 0)       => vermelho
    -> método fill(cor) para preencher objetos
        -> dar cor verde para um retangulo vai definir sua borda como verde, usa fill(obj_verde)

- Drawing Functions
    -> usadas para criar objetos no pygame (podem compartilhar parametros)
    -> parâmetros (alguns):
        surface: objeto superfície que pygame vai desenhar
            displaysurface = pygame.display.set_mode((X, Y))
        color: cor do objeto
        pointlist: tupla com coordenadas para seus "pontos"
            retâgulo possui 4 pares ordenados
        width: opcional, tamanho da borda (int)
        start_point e end_point: par de coordenadas, linha começa em um par e termina em outro
        center_point: origin de círculo
    -> funções:
        poligono : pygame.draw.polygon(surface, color, pointlist, width)
        linha    : pygame.draw.line(surface, color, start_point, end_point, width)
        linhas   : pygame.draw.lines(surface, color, closed, pointlist, width)
        circulo  : pygame.draw.circle(surface, color, center_point, radius, width)
        elipse   : pygame.draw.ellipse(surface, color, bounding_rectangle, width)
        retangulo: pygame.draw.rect(surface, color, rectangle_tuple, width)
    
- FPS:
    -> por padrão, se não tiver limite, vai executar o game loop quantas vezes conseguir em um segundo
    -> limitar: tick(fps)
        FPS = pygame.time.Clock()    
        FPS.tick(60)              => parte do objeto Clock

- Surfaces:
    -> objeto surface mais comum para o pygame
        display_surface = pygame.display.set_mode((larg, alt))
    -> criar surface: (larg, altura)
        surf1 = pygame.Surface((larg, alt))
        -> fazendo isso, não mostra o objeto na tela
    
    -> fill(cor): preenche surface com essa cor (RGB)
        -> opcional (padrão = preto)

    -> surface.blit(source, destino): desenhar surface em outra 
        -> surface: surface que quer usar de base 
        -> source: surface que vai ser desenhada
        -> destino: pode ser par de coordenada ou objeto retangulo (canto sup esquerdo será usado para posicionar)

    -> pygame.Surface.copy(): cria cópia de outro objeto (mesmas cores, transparencia, ...)
    -> pygame.Surface.get_height() e .get_width(): retorna altura / largura
    -> pygame.Surface.convert(): converte objeto pygame.Surface para o mesmo formato de pixels do display final (o mesmo criado com pygame.display.set_mode())
        -> sem ele, quando der blit() de uma superfície em outra, a conversão de pixels é necessária
            -> operação pixel a pixel: lenta

    -> pygame.image é contada como surface

https://coderslegacy.com/python/pygame-tutorial-part-2/ 
    -> explanation # Creating Sprites Groups
https://coderslegacy.com/python/pygame-tutorial-part-3/
https://www.pygame.org/docs/ref/surface.html#pygame.Surface.blit